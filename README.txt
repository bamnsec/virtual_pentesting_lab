This is the beginning of a project that aims to remedy a problem that tends to exist in the process of learning security and penetration testing.  The ways that these skills can be acquired is somewhat limited.  One can take classes in information and systems security, and, after spending a lot of money, may have a textbook understanding of base concepts.  If one is lucky this class comes with a virutal laboratory that one has access to during their class.  The other option has tended to be practicing these skills in the wild, with all of the legal and financial risk that this entails; not the most secure environment to learn within.

There have been a series of new labs that have arisen in the past few years, but they all contain their own quirks and so on. These third party remote pentesting and security labs are excellent, but present problems of their own.  WHat if we could set up labs for testing in an easy way on cheap hardware that is otherwise being discarded?  

That is exactly what this project will be attempting to achieve, to construct a methodology of quick laboratory set up that can be done on desktop machines that can be assembled from older parts for very little money. The purpose of this project is to track the process of setting up a local laboratory on an older desktop computer that can be accessed remotely, and that will contain both easy to access machines, based in Metasploitable and Damn Vulnerable Linux, up to Ubuntu boxes secured with SELinux.  

Unlike other lab environments the idea is not to build a staged, capture the flag type environment, but to build an open network, that mimics the challenges and dynamics of a real network, to the degree possible.  To do this a series of assumptions will be made and a series of approaches will potentially be taken.

The primary assumption is that networks in themselves are not necessarily based on equivalent nodes, and do not operate in an egalitarian way.  In other words, within any network there are nodes, and points of convergence that exist in relation to others nodes with different degrees of importance.  Secondly, with the increasing frequency of employees or customers bringing machines into the network space, even with incredibly well organized patching cycles and tight user controls, it is still not possible to assume a security equivalence within a network.  As such, the boxes within this system will be unequal in the challenges they present and services they operate within the network.

The project will not consist of a single piece of software, and does not have a clear path yet.  The goal is that through the process of assembling a system like this within the local network that I interact with, and through the process of using this as the excuse I need to learn Ansible and Vargant, some methods will be developed that will make this process easier.  I intend on producing a combination of tutorials, bash scripts, Ansible configurations and suggestions for virtual machines that can be used within a project like this.  Due to constraints in my own understanding this project will be based in VirtualBox, and developed through a fresh system, running Ubuntu as its base, underlying operating system.  

I fully encourage others who feel as if this is a worthwhile project to contribute their skills and understanding to the project